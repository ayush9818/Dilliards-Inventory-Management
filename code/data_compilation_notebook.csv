{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "38de904f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import psycopg2\n",
    "from dotenv import load_dotenv\n",
    "import os\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8941cf74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/Users/dare_devil/Desktop/MLDS_2024/Quarter1/Everything_Starts_With_Data/Project/MLDS_400_G11/DataCleaning\n",
      "/Users/dare_devil/Desktop/MLDS_2024/Quarter1/Everything_Starts_With_Data/Project/MLDS_400_G11/.env\n",
      "Schema : group_11\n",
      "DBName: everything2023 HOSTNAME: pg.analytics.northwestern.edu\n"
     ]
    }
   ],
   "source": [
    "CURR_DIR=os.getcwd()\n",
    "print(CURR_DIR)\n",
    "env_file_path=os.path.join(os.path.dirname(CURR_DIR), '.env')\n",
    "print(env_file_path)\n",
    "\n",
    "# load the environment variables\n",
    "load_dotenv(env_file_path)\n",
    "env=os.environ\n",
    "\n",
    "DBNAME=env.get('DBNAME')\n",
    "USERNAME=env.get('USERNAME')\n",
    "PASSWORD=env.get('PASSWORD')\n",
    "HOSTNAME=env.get('HOSTNAME')\n",
    "PORT=env.get('PORT')\n",
    "SCHEMA=env.get('SCHEMA')\n",
    "print(f\"Schema : {SCHEMA}\")\n",
    "print(f\"DBName: {DBNAME} HOSTNAME: {HOSTNAME}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "abfdafad",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Establish the connection\n",
    "conn = psycopg2.connect(\n",
    "    dbname=DBNAME,\n",
    "    user=USERNAME,\n",
    "    password=PASSWORD,\n",
    "    host=HOSTNAME,\n",
    "    port=PORT\n",
    ")\n",
    "\n",
    "# Create a cursor object to interact with the database\n",
    "cur = conn.cursor()\n",
    "\n",
    "# Setting the SearchPath to Group Schema\n",
    "cur.execute(f\"SET search_path TO {SCHEMA};\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "41e28e96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['DEPT', 'DEPTDESC']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DEPT</th>\n",
       "      <th>DEPTDESC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>800</td>\n",
       "      <td>CLINIQUE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>801</td>\n",
       "      <td>LESLIE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1100</td>\n",
       "      <td>GARY F</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1107</td>\n",
       "      <td>JACQUES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1202</td>\n",
       "      <td>CABERN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   DEPT  DEPTDESC\n",
       "0   800  CLINIQUE\n",
       "1   801    LESLIE\n",
       "2  1100    GARY F\n",
       "3  1107   JACQUES\n",
       "4  1202    CABERN"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting Data from DeptInfo\n",
    "cur.execute(\"SELECT * FROM deptinfo;\")\n",
    "column_names = [desc[0] for desc in cur.description]\n",
    "print(column_names)\n",
    "\n",
    "rows = cur.fetchall()\n",
    "df_deptinfo = pd.DataFrame(rows, columns=column_names)\n",
    "df_deptinfo.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e1e96d5e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['SKU', 'STORE', 'COST', 'RETAIL']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>STORE</th>\n",
       "      <th>COST</th>\n",
       "      <th>RETAIL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5128613</td>\n",
       "      <td>5602</td>\n",
       "      <td>20.02</td>\n",
       "      <td>19.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5128613</td>\n",
       "      <td>5603</td>\n",
       "      <td>20.02</td>\n",
       "      <td>22.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5128613</td>\n",
       "      <td>5704</td>\n",
       "      <td>20.02</td>\n",
       "      <td>44.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5128613</td>\n",
       "      <td>6002</td>\n",
       "      <td>20.02</td>\n",
       "      <td>19.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5128613</td>\n",
       "      <td>6009</td>\n",
       "      <td>20.02</td>\n",
       "      <td>33.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       SKU  STORE   COST  RETAIL\n",
       "0  5128613   5602  20.02   19.99\n",
       "1  5128613   5603  20.02   22.00\n",
       "2  5128613   5704  20.02   44.00\n",
       "3  5128613   6002  20.02   19.99\n",
       "4  5128613   6009  20.02   33.00"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting Data from Skstinfo\n",
    "cur.execute(\"SELECT * FROM skstinfo;\")\n",
    "column_names = [desc[0] for desc in cur.description]\n",
    "print(column_names)\n",
    "\n",
    "rows = cur.fetchall()\n",
    "df_skstinfo = pd.DataFrame(rows, columns=column_names)\n",
    "df_skstinfo.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "12309927",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['SKU', 'DEPT', 'CLASSID', 'UPC', 'STYLE', 'COLOR', 'SIZE', 'PACKSIZE', 'VENDOR', 'BRAND']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>DEPT</th>\n",
       "      <th>CLASSID</th>\n",
       "      <th>UPC</th>\n",
       "      <th>STYLE</th>\n",
       "      <th>COLOR</th>\n",
       "      <th>SIZE</th>\n",
       "      <th>PACKSIZE</th>\n",
       "      <th>VENDOR</th>\n",
       "      <th>BRAND</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50691</td>\n",
       "      <td>8101</td>\n",
       "      <td>002</td>\n",
       "      <td>400000691005</td>\n",
       "      <td>70    JKMU35</td>\n",
       "      <td>ALOEMIST</td>\n",
       "      <td>M</td>\n",
       "      <td>1</td>\n",
       "      <td>613313</td>\n",
       "      <td>JH COLLE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>50694</td>\n",
       "      <td>6006</td>\n",
       "      <td>111</td>\n",
       "      <td>400000694005</td>\n",
       "      <td>032   WONDER</td>\n",
       "      <td>GREY PYTHV</td>\n",
       "      <td>090N</td>\n",
       "      <td>1</td>\n",
       "      <td>811072</td>\n",
       "      <td>CARESSA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>50696</td>\n",
       "      <td>5404</td>\n",
       "      <td>002</td>\n",
       "      <td>400000696005</td>\n",
       "      <td>27-61 445441</td>\n",
       "      <td>RED</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>934938</td>\n",
       "      <td>KIDS HEA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50697</td>\n",
       "      <td>5203</td>\n",
       "      <td>002</td>\n",
       "      <td>400000697005</td>\n",
       "      <td>GA1101</td>\n",
       "      <td>MULTI</td>\n",
       "      <td>M</td>\n",
       "      <td>1</td>\n",
       "      <td>216221</td>\n",
       "      <td>SKINNY M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>50703</td>\n",
       "      <td>6404</td>\n",
       "      <td>502</td>\n",
       "      <td>400000703005</td>\n",
       "      <td>159   427654</td>\n",
       "      <td>BLACK 20</td>\n",
       "      <td>26 30</td>\n",
       "      <td>1</td>\n",
       "      <td>6436489</td>\n",
       "      <td>LEVI STR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     SKU  DEPT CLASSID           UPC         STYLE       COLOR   SIZE   \n",
       "0  50691  8101     002  400000691005  70    JKMU35    ALOEMIST      M  \\\n",
       "1  50694  6006     111  400000694005  032   WONDER  GREY PYTHV   090N   \n",
       "2  50696  5404     002  400000696005  27-61 445441         RED      4   \n",
       "3  50697  5203     002  400000697005        GA1101       MULTI      M   \n",
       "4  50703  6404     502  400000703005  159   427654    BLACK 20  26 30   \n",
       "\n",
       "   PACKSIZE   VENDOR     BRAND  \n",
       "0         1   613313  JH COLLE  \n",
       "1         1   811072   CARESSA  \n",
       "2         1   934938  KIDS HEA  \n",
       "3         1   216221  SKINNY M  \n",
       "4         1  6436489  LEVI STR  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting Data from skutinfo\n",
    "cur.execute(\"SELECT * FROM skuinfo;\")\n",
    "column_names = [desc[0] for desc in cur.description]\n",
    "print(column_names)\n",
    "\n",
    "rows = cur.fetchall()\n",
    "df_skuinfo = pd.DataFrame(rows, columns=column_names)\n",
    "\n",
    "\n",
    "df_skuinfo_orig = df_skuinfo.copy()\n",
    "df_skuinfo.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a38eb358",
   "metadata": {},
   "source": [
    "### Getting Store-Level Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "54645ca4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['STORE', 'CITY', 'STATE', 'ZIP']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STORE</th>\n",
       "      <th>CITY</th>\n",
       "      <th>STATE</th>\n",
       "      <th>ZIP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>ST. PETERSBURG</td>\n",
       "      <td>FL</td>\n",
       "      <td>33710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>ST. LOUIS</td>\n",
       "      <td>MO</td>\n",
       "      <td>63126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>LITTLE ROCK</td>\n",
       "      <td>AR</td>\n",
       "      <td>72201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>FORT WORTH</td>\n",
       "      <td>TX</td>\n",
       "      <td>76137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>TEMPE</td>\n",
       "      <td>AZ</td>\n",
       "      <td>85281</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   STORE            CITY STATE    ZIP\n",
       "0      2  ST. PETERSBURG    FL  33710\n",
       "1      3       ST. LOUIS    MO  63126\n",
       "2      4     LITTLE ROCK    AR  72201\n",
       "3      7      FORT WORTH    TX  76137\n",
       "4      9           TEMPE    AZ  85281"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting Data from strinfo\n",
    "cur.execute(\"SELECT * FROM strinfo;\")\n",
    "column_names = [desc[0] for desc in cur.description]\n",
    "print(column_names)\n",
    "\n",
    "rows = cur.fetchall()\n",
    "df_strinfo = pd.DataFrame(rows, columns=column_names)\n",
    "df_strinfo.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d10a8243",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE</th>\n",
       "      <th>MenRatio</th>\n",
       "      <th>WomenRatio</th>\n",
       "      <th>White</th>\n",
       "      <th>Black</th>\n",
       "      <th>Native</th>\n",
       "      <th>Asian</th>\n",
       "      <th>Pacific</th>\n",
       "      <th>Income</th>\n",
       "      <th>Poverty</th>\n",
       "      <th>Professional</th>\n",
       "      <th>Service</th>\n",
       "      <th>Office</th>\n",
       "      <th>Construction</th>\n",
       "      <th>Production</th>\n",
       "      <th>Unemployment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AK</td>\n",
       "      <td>0.538550</td>\n",
       "      <td>0.461450</td>\n",
       "      <td>48.420690</td>\n",
       "      <td>1.179310</td>\n",
       "      <td>31.627586</td>\n",
       "      <td>5.982759</td>\n",
       "      <td>0.544828</td>\n",
       "      <td>66425.448276</td>\n",
       "      <td>13.555172</td>\n",
       "      <td>31.868966</td>\n",
       "      <td>18.727586</td>\n",
       "      <td>20.365517</td>\n",
       "      <td>14.789655</td>\n",
       "      <td>14.244828</td>\n",
       "      <td>9.655172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AL</td>\n",
       "      <td>0.487016</td>\n",
       "      <td>0.512984</td>\n",
       "      <td>65.168657</td>\n",
       "      <td>28.673134</td>\n",
       "      <td>0.607463</td>\n",
       "      <td>0.711940</td>\n",
       "      <td>0.017910</td>\n",
       "      <td>40271.402985</td>\n",
       "      <td>20.949254</td>\n",
       "      <td>28.095522</td>\n",
       "      <td>16.829851</td>\n",
       "      <td>22.555224</td>\n",
       "      <td>11.605970</td>\n",
       "      <td>20.905970</td>\n",
       "      <td>9.023881</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AR</td>\n",
       "      <td>0.494146</td>\n",
       "      <td>0.505854</td>\n",
       "      <td>75.634667</td>\n",
       "      <td>16.132000</td>\n",
       "      <td>0.540000</td>\n",
       "      <td>0.692000</td>\n",
       "      <td>0.077333</td>\n",
       "      <td>39025.080000</td>\n",
       "      <td>20.421333</td>\n",
       "      <td>28.506667</td>\n",
       "      <td>17.640000</td>\n",
       "      <td>21.600000</td>\n",
       "      <td>13.008000</td>\n",
       "      <td>19.256000</td>\n",
       "      <td>7.292000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AZ</td>\n",
       "      <td>0.504501</td>\n",
       "      <td>0.495499</td>\n",
       "      <td>50.826667</td>\n",
       "      <td>1.813333</td>\n",
       "      <td>13.233333</td>\n",
       "      <td>1.293333</td>\n",
       "      <td>0.126667</td>\n",
       "      <td>45816.666667</td>\n",
       "      <td>20.193333</td>\n",
       "      <td>30.006667</td>\n",
       "      <td>22.566667</td>\n",
       "      <td>23.226667</td>\n",
       "      <td>13.153333</td>\n",
       "      <td>11.073333</td>\n",
       "      <td>9.766667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CA</td>\n",
       "      <td>0.506242</td>\n",
       "      <td>0.493758</td>\n",
       "      <td>54.762069</td>\n",
       "      <td>2.944828</td>\n",
       "      <td>1.650000</td>\n",
       "      <td>7.070690</td>\n",
       "      <td>0.291379</td>\n",
       "      <td>61046.758621</td>\n",
       "      <td>15.737931</td>\n",
       "      <td>34.212069</td>\n",
       "      <td>20.655172</td>\n",
       "      <td>21.960345</td>\n",
       "      <td>12.467241</td>\n",
       "      <td>10.703448</td>\n",
       "      <td>8.265517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CO</td>\n",
       "      <td>0.517922</td>\n",
       "      <td>0.482078</td>\n",
       "      <td>74.657813</td>\n",
       "      <td>1.482813</td>\n",
       "      <td>0.831250</td>\n",
       "      <td>1.109375</td>\n",
       "      <td>0.114062</td>\n",
       "      <td>54353.562500</td>\n",
       "      <td>13.234375</td>\n",
       "      <td>35.031250</td>\n",
       "      <td>19.917188</td>\n",
       "      <td>20.831250</td>\n",
       "      <td>14.535937</td>\n",
       "      <td>9.681250</td>\n",
       "      <td>5.793750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>CT</td>\n",
       "      <td>0.492206</td>\n",
       "      <td>0.507794</td>\n",
       "      <td>76.037500</td>\n",
       "      <td>6.475000</td>\n",
       "      <td>0.125000</td>\n",
       "      <td>3.575000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>74496.000000</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>41.412500</td>\n",
       "      <td>18.037500</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>8.187500</td>\n",
       "      <td>9.775000</td>\n",
       "      <td>6.775000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>DE</td>\n",
       "      <td>0.483901</td>\n",
       "      <td>0.516099</td>\n",
       "      <td>65.366667</td>\n",
       "      <td>20.100000</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>2.866667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>61294.666667</td>\n",
       "      <td>12.300000</td>\n",
       "      <td>36.900000</td>\n",
       "      <td>18.500000</td>\n",
       "      <td>23.433333</td>\n",
       "      <td>9.400000</td>\n",
       "      <td>11.766667</td>\n",
       "      <td>6.433333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>FL</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>0.485923</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>14.201493</td>\n",
       "      <td>0.395522</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>0.076119</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>21.243284</td>\n",
       "      <td>24.908955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>10.577612</td>\n",
       "      <td>7.765672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>GA</td>\n",
       "      <td>0.496204</td>\n",
       "      <td>0.503796</td>\n",
       "      <td>62.564151</td>\n",
       "      <td>28.144654</td>\n",
       "      <td>0.189937</td>\n",
       "      <td>1.201258</td>\n",
       "      <td>0.045912</td>\n",
       "      <td>43268.786164</td>\n",
       "      <td>21.192453</td>\n",
       "      <td>29.157862</td>\n",
       "      <td>17.684906</td>\n",
       "      <td>22.554088</td>\n",
       "      <td>12.730818</td>\n",
       "      <td>17.872327</td>\n",
       "      <td>8.053459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>HI</td>\n",
       "      <td>0.494926</td>\n",
       "      <td>0.505074</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>0.140000</td>\n",
       "      <td>30.760000</td>\n",
       "      <td>14.460000</td>\n",
       "      <td>68663.000000</td>\n",
       "      <td>11.660000</td>\n",
       "      <td>29.560000</td>\n",
       "      <td>28.220000</td>\n",
       "      <td>23.400000</td>\n",
       "      <td>8.260000</td>\n",
       "      <td>10.540000</td>\n",
       "      <td>4.120000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>IA</td>\n",
       "      <td>0.498614</td>\n",
       "      <td>0.501386</td>\n",
       "      <td>91.389899</td>\n",
       "      <td>1.378788</td>\n",
       "      <td>0.294949</td>\n",
       "      <td>1.082828</td>\n",
       "      <td>0.060606</td>\n",
       "      <td>53436.080808</td>\n",
       "      <td>11.500000</td>\n",
       "      <td>32.123232</td>\n",
       "      <td>16.315152</td>\n",
       "      <td>21.062626</td>\n",
       "      <td>11.577778</td>\n",
       "      <td>18.921212</td>\n",
       "      <td>3.895960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>ID</td>\n",
       "      <td>0.508244</td>\n",
       "      <td>0.491756</td>\n",
       "      <td>82.920455</td>\n",
       "      <td>0.377273</td>\n",
       "      <td>1.515909</td>\n",
       "      <td>0.645455</td>\n",
       "      <td>0.086364</td>\n",
       "      <td>46171.931818</td>\n",
       "      <td>15.472727</td>\n",
       "      <td>29.818182</td>\n",
       "      <td>18.240909</td>\n",
       "      <td>20.634091</td>\n",
       "      <td>16.493182</td>\n",
       "      <td>14.827273</td>\n",
       "      <td>5.622727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>IL</td>\n",
       "      <td>0.501124</td>\n",
       "      <td>0.498876</td>\n",
       "      <td>87.048039</td>\n",
       "      <td>5.148039</td>\n",
       "      <td>0.153922</td>\n",
       "      <td>1.221569</td>\n",
       "      <td>0.020588</td>\n",
       "      <td>52930.382353</td>\n",
       "      <td>13.955882</td>\n",
       "      <td>30.804902</td>\n",
       "      <td>18.334314</td>\n",
       "      <td>22.282353</td>\n",
       "      <td>10.648039</td>\n",
       "      <td>17.935294</td>\n",
       "      <td>6.611765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>IN</td>\n",
       "      <td>0.498085</td>\n",
       "      <td>0.501915</td>\n",
       "      <td>90.754348</td>\n",
       "      <td>2.658696</td>\n",
       "      <td>0.188043</td>\n",
       "      <td>1.006522</td>\n",
       "      <td>0.021739</td>\n",
       "      <td>51877.402174</td>\n",
       "      <td>13.176087</td>\n",
       "      <td>28.791304</td>\n",
       "      <td>16.490217</td>\n",
       "      <td>20.953261</td>\n",
       "      <td>10.935870</td>\n",
       "      <td>22.826087</td>\n",
       "      <td>5.445652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>KS</td>\n",
       "      <td>0.502307</td>\n",
       "      <td>0.497693</td>\n",
       "      <td>84.740952</td>\n",
       "      <td>1.748571</td>\n",
       "      <td>0.779048</td>\n",
       "      <td>0.803810</td>\n",
       "      <td>0.054286</td>\n",
       "      <td>50022.571429</td>\n",
       "      <td>12.368571</td>\n",
       "      <td>34.043810</td>\n",
       "      <td>16.520952</td>\n",
       "      <td>20.320952</td>\n",
       "      <td>14.051429</td>\n",
       "      <td>15.064762</td>\n",
       "      <td>3.990476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>KY</td>\n",
       "      <td>0.496768</td>\n",
       "      <td>0.503232</td>\n",
       "      <td>91.810000</td>\n",
       "      <td>3.649167</td>\n",
       "      <td>0.182500</td>\n",
       "      <td>0.513333</td>\n",
       "      <td>0.025833</td>\n",
       "      <td>41470.491667</td>\n",
       "      <td>21.304167</td>\n",
       "      <td>28.687500</td>\n",
       "      <td>17.045000</td>\n",
       "      <td>22.003333</td>\n",
       "      <td>12.188333</td>\n",
       "      <td>20.086667</td>\n",
       "      <td>7.672500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>LA</td>\n",
       "      <td>0.501864</td>\n",
       "      <td>0.498136</td>\n",
       "      <td>61.729687</td>\n",
       "      <td>31.775000</td>\n",
       "      <td>0.617188</td>\n",
       "      <td>0.807813</td>\n",
       "      <td>0.020313</td>\n",
       "      <td>42654.078125</td>\n",
       "      <td>21.900000</td>\n",
       "      <td>29.125000</td>\n",
       "      <td>19.598437</td>\n",
       "      <td>22.784375</td>\n",
       "      <td>14.356250</td>\n",
       "      <td>14.129687</td>\n",
       "      <td>7.871875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>MA</td>\n",
       "      <td>0.486411</td>\n",
       "      <td>0.513589</td>\n",
       "      <td>77.828571</td>\n",
       "      <td>5.700000</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>4.028571</td>\n",
       "      <td>0.021429</td>\n",
       "      <td>71030.714286</td>\n",
       "      <td>11.200000</td>\n",
       "      <td>41.835714</td>\n",
       "      <td>18.421429</td>\n",
       "      <td>22.100000</td>\n",
       "      <td>8.592857</td>\n",
       "      <td>9.050000</td>\n",
       "      <td>5.842857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>MD</td>\n",
       "      <td>0.490849</td>\n",
       "      <td>0.509151</td>\n",
       "      <td>68.116667</td>\n",
       "      <td>19.837500</td>\n",
       "      <td>0.191667</td>\n",
       "      <td>3.295833</td>\n",
       "      <td>0.025000</td>\n",
       "      <td>72541.166667</td>\n",
       "      <td>10.858333</td>\n",
       "      <td>39.991667</td>\n",
       "      <td>18.120833</td>\n",
       "      <td>22.570833</td>\n",
       "      <td>9.770833</td>\n",
       "      <td>9.566667</td>\n",
       "      <td>6.120833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>ME</td>\n",
       "      <td>0.490474</td>\n",
       "      <td>0.509526</td>\n",
       "      <td>94.393750</td>\n",
       "      <td>0.775000</td>\n",
       "      <td>0.768750</td>\n",
       "      <td>0.775000</td>\n",
       "      <td>0.012500</td>\n",
       "      <td>49680.812500</td>\n",
       "      <td>13.993750</td>\n",
       "      <td>33.637500</td>\n",
       "      <td>18.862500</td>\n",
       "      <td>22.006250</td>\n",
       "      <td>12.812500</td>\n",
       "      <td>12.668750</td>\n",
       "      <td>5.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>MI</td>\n",
       "      <td>0.504041</td>\n",
       "      <td>0.495959</td>\n",
       "      <td>88.098795</td>\n",
       "      <td>3.874699</td>\n",
       "      <td>1.262651</td>\n",
       "      <td>0.997590</td>\n",
       "      <td>0.016867</td>\n",
       "      <td>47530.518072</td>\n",
       "      <td>15.665060</td>\n",
       "      <td>29.680723</td>\n",
       "      <td>19.616867</td>\n",
       "      <td>22.428916</td>\n",
       "      <td>10.713253</td>\n",
       "      <td>17.562651</td>\n",
       "      <td>7.620482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>MN</td>\n",
       "      <td>0.502377</td>\n",
       "      <td>0.497623</td>\n",
       "      <td>88.937931</td>\n",
       "      <td>1.629885</td>\n",
       "      <td>1.935632</td>\n",
       "      <td>1.439080</td>\n",
       "      <td>0.029885</td>\n",
       "      <td>57530.000000</td>\n",
       "      <td>11.040230</td>\n",
       "      <td>33.309195</td>\n",
       "      <td>17.254023</td>\n",
       "      <td>21.089655</td>\n",
       "      <td>11.722989</td>\n",
       "      <td>16.616092</td>\n",
       "      <td>3.954023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>MO</td>\n",
       "      <td>0.498636</td>\n",
       "      <td>0.501364</td>\n",
       "      <td>90.566957</td>\n",
       "      <td>3.561739</td>\n",
       "      <td>0.499130</td>\n",
       "      <td>0.631304</td>\n",
       "      <td>0.084348</td>\n",
       "      <td>44435.304348</td>\n",
       "      <td>17.261739</td>\n",
       "      <td>29.287826</td>\n",
       "      <td>18.395652</td>\n",
       "      <td>21.799130</td>\n",
       "      <td>12.403478</td>\n",
       "      <td>18.119130</td>\n",
       "      <td>6.026087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>MS</td>\n",
       "      <td>0.489157</td>\n",
       "      <td>0.510843</td>\n",
       "      <td>54.315854</td>\n",
       "      <td>41.345122</td>\n",
       "      <td>0.509756</td>\n",
       "      <td>0.513415</td>\n",
       "      <td>0.015854</td>\n",
       "      <td>37018.719512</td>\n",
       "      <td>24.941463</td>\n",
       "      <td>28.543902</td>\n",
       "      <td>17.971951</td>\n",
       "      <td>21.484146</td>\n",
       "      <td>12.287805</td>\n",
       "      <td>19.708537</td>\n",
       "      <td>10.007317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>MT</td>\n",
       "      <td>0.507062</td>\n",
       "      <td>0.492938</td>\n",
       "      <td>86.573214</td>\n",
       "      <td>0.221429</td>\n",
       "      <td>7.773214</td>\n",
       "      <td>0.467857</td>\n",
       "      <td>0.030357</td>\n",
       "      <td>47746.750000</td>\n",
       "      <td>14.589286</td>\n",
       "      <td>36.616071</td>\n",
       "      <td>17.710714</td>\n",
       "      <td>19.862500</td>\n",
       "      <td>16.180357</td>\n",
       "      <td>9.641071</td>\n",
       "      <td>4.525000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>NC</td>\n",
       "      <td>0.491350</td>\n",
       "      <td>0.508650</td>\n",
       "      <td>68.111000</td>\n",
       "      <td>20.163000</td>\n",
       "      <td>1.549000</td>\n",
       "      <td>1.139000</td>\n",
       "      <td>0.036000</td>\n",
       "      <td>44551.670000</td>\n",
       "      <td>18.322000</td>\n",
       "      <td>30.847000</td>\n",
       "      <td>19.304000</td>\n",
       "      <td>22.037000</td>\n",
       "      <td>11.708000</td>\n",
       "      <td>16.105000</td>\n",
       "      <td>7.965000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>ND</td>\n",
       "      <td>0.511510</td>\n",
       "      <td>0.488490</td>\n",
       "      <td>87.607547</td>\n",
       "      <td>0.877358</td>\n",
       "      <td>6.577358</td>\n",
       "      <td>0.494340</td>\n",
       "      <td>0.018868</td>\n",
       "      <td>59795.962264</td>\n",
       "      <td>10.628302</td>\n",
       "      <td>36.533962</td>\n",
       "      <td>16.266038</td>\n",
       "      <td>19.179245</td>\n",
       "      <td>15.269811</td>\n",
       "      <td>12.749057</td>\n",
       "      <td>2.728302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>NE</td>\n",
       "      <td>0.500793</td>\n",
       "      <td>0.499207</td>\n",
       "      <td>89.511828</td>\n",
       "      <td>0.818280</td>\n",
       "      <td>1.191398</td>\n",
       "      <td>0.513978</td>\n",
       "      <td>0.072043</td>\n",
       "      <td>51928.354839</td>\n",
       "      <td>11.195699</td>\n",
       "      <td>35.009677</td>\n",
       "      <td>15.682796</td>\n",
       "      <td>20.421505</td>\n",
       "      <td>14.298925</td>\n",
       "      <td>14.593548</td>\n",
       "      <td>2.847312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>NH</td>\n",
       "      <td>0.496653</td>\n",
       "      <td>0.503347</td>\n",
       "      <td>92.950000</td>\n",
       "      <td>1.020000</td>\n",
       "      <td>0.190000</td>\n",
       "      <td>1.820000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>64901.900000</td>\n",
       "      <td>9.270000</td>\n",
       "      <td>37.830000</td>\n",
       "      <td>17.580000</td>\n",
       "      <td>23.130000</td>\n",
       "      <td>9.640000</td>\n",
       "      <td>11.790000</td>\n",
       "      <td>4.540000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>NJ</td>\n",
       "      <td>0.489672</td>\n",
       "      <td>0.510328</td>\n",
       "      <td>62.442857</td>\n",
       "      <td>11.338095</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>7.104762</td>\n",
       "      <td>0.004762</td>\n",
       "      <td>77047.761905</td>\n",
       "      <td>10.495238</td>\n",
       "      <td>40.214286</td>\n",
       "      <td>17.204762</td>\n",
       "      <td>24.033333</td>\n",
       "      <td>7.890476</td>\n",
       "      <td>10.628571</td>\n",
       "      <td>7.119048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>NM</td>\n",
       "      <td>0.503755</td>\n",
       "      <td>0.496245</td>\n",
       "      <td>41.984848</td>\n",
       "      <td>1.254545</td>\n",
       "      <td>6.881818</td>\n",
       "      <td>0.757576</td>\n",
       "      <td>0.021212</td>\n",
       "      <td>41197.212121</td>\n",
       "      <td>21.742424</td>\n",
       "      <td>32.969697</td>\n",
       "      <td>22.218182</td>\n",
       "      <td>22.093939</td>\n",
       "      <td>13.054545</td>\n",
       "      <td>9.660606</td>\n",
       "      <td>7.566667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>NV</td>\n",
       "      <td>0.518167</td>\n",
       "      <td>0.481833</td>\n",
       "      <td>72.294118</td>\n",
       "      <td>2.188235</td>\n",
       "      <td>3.858824</td>\n",
       "      <td>2.029412</td>\n",
       "      <td>0.223529</td>\n",
       "      <td>56859.000000</td>\n",
       "      <td>12.700000</td>\n",
       "      <td>29.382353</td>\n",
       "      <td>20.276471</td>\n",
       "      <td>20.941176</td>\n",
       "      <td>17.641176</td>\n",
       "      <td>11.735294</td>\n",
       "      <td>7.394118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>NY</td>\n",
       "      <td>0.497647</td>\n",
       "      <td>0.502353</td>\n",
       "      <td>81.320968</td>\n",
       "      <td>5.811290</td>\n",
       "      <td>0.374194</td>\n",
       "      <td>2.827419</td>\n",
       "      <td>0.019355</td>\n",
       "      <td>58309.258065</td>\n",
       "      <td>14.016129</td>\n",
       "      <td>35.783871</td>\n",
       "      <td>19.612903</td>\n",
       "      <td>22.732258</td>\n",
       "      <td>9.804839</td>\n",
       "      <td>12.066129</td>\n",
       "      <td>6.577419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>OH</td>\n",
       "      <td>0.496876</td>\n",
       "      <td>0.503124</td>\n",
       "      <td>90.285227</td>\n",
       "      <td>4.080682</td>\n",
       "      <td>0.146591</td>\n",
       "      <td>0.931818</td>\n",
       "      <td>0.019318</td>\n",
       "      <td>51742.204545</td>\n",
       "      <td>14.507955</td>\n",
       "      <td>30.580682</td>\n",
       "      <td>17.213636</td>\n",
       "      <td>21.750000</td>\n",
       "      <td>9.963636</td>\n",
       "      <td>20.496591</td>\n",
       "      <td>6.084091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>OK</td>\n",
       "      <td>0.502387</td>\n",
       "      <td>0.497613</td>\n",
       "      <td>70.912987</td>\n",
       "      <td>3.377922</td>\n",
       "      <td>8.898701</td>\n",
       "      <td>0.757143</td>\n",
       "      <td>0.110390</td>\n",
       "      <td>46219.857143</td>\n",
       "      <td>17.085714</td>\n",
       "      <td>30.461039</td>\n",
       "      <td>17.680519</td>\n",
       "      <td>21.858442</td>\n",
       "      <td>14.200000</td>\n",
       "      <td>15.801299</td>\n",
       "      <td>5.853247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>OR</td>\n",
       "      <td>0.500206</td>\n",
       "      <td>0.499794</td>\n",
       "      <td>80.933333</td>\n",
       "      <td>0.736111</td>\n",
       "      <td>1.716667</td>\n",
       "      <td>1.602778</td>\n",
       "      <td>0.266667</td>\n",
       "      <td>48502.500000</td>\n",
       "      <td>15.908333</td>\n",
       "      <td>32.875000</td>\n",
       "      <td>19.300000</td>\n",
       "      <td>21.691667</td>\n",
       "      <td>12.669444</td>\n",
       "      <td>13.461111</td>\n",
       "      <td>7.455556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>PA</td>\n",
       "      <td>0.502318</td>\n",
       "      <td>0.497682</td>\n",
       "      <td>88.253731</td>\n",
       "      <td>4.507463</td>\n",
       "      <td>0.123881</td>\n",
       "      <td>1.441791</td>\n",
       "      <td>0.002985</td>\n",
       "      <td>53281.880597</td>\n",
       "      <td>12.832836</td>\n",
       "      <td>31.901493</td>\n",
       "      <td>18.065672</td>\n",
       "      <td>22.229851</td>\n",
       "      <td>10.597015</td>\n",
       "      <td>17.189552</td>\n",
       "      <td>6.031343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>RI</td>\n",
       "      <td>0.485534</td>\n",
       "      <td>0.514466</td>\n",
       "      <td>84.340000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.320000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>0.060000</td>\n",
       "      <td>69906.400000</td>\n",
       "      <td>10.020000</td>\n",
       "      <td>41.880000</td>\n",
       "      <td>18.880000</td>\n",
       "      <td>22.720000</td>\n",
       "      <td>7.260000</td>\n",
       "      <td>9.280000</td>\n",
       "      <td>5.860000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>SC</td>\n",
       "      <td>0.489932</td>\n",
       "      <td>0.510068</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>35.491304</td>\n",
       "      <td>0.354348</td>\n",
       "      <td>0.804348</td>\n",
       "      <td>0.047826</td>\n",
       "      <td>42126.782609</td>\n",
       "      <td>20.063043</td>\n",
       "      <td>28.743478</td>\n",
       "      <td>18.636957</td>\n",
       "      <td>23.210870</td>\n",
       "      <td>10.621739</td>\n",
       "      <td>18.776087</td>\n",
       "      <td>8.773913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>SD</td>\n",
       "      <td>0.505261</td>\n",
       "      <td>0.494739</td>\n",
       "      <td>80.183333</td>\n",
       "      <td>0.556061</td>\n",
       "      <td>13.892424</td>\n",
       "      <td>0.718182</td>\n",
       "      <td>0.062121</td>\n",
       "      <td>50408.742424</td>\n",
       "      <td>16.206061</td>\n",
       "      <td>36.937879</td>\n",
       "      <td>16.769697</td>\n",
       "      <td>20.162121</td>\n",
       "      <td>13.695455</td>\n",
       "      <td>12.436364</td>\n",
       "      <td>4.821212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>TN</td>\n",
       "      <td>0.495863</td>\n",
       "      <td>0.504137</td>\n",
       "      <td>86.431579</td>\n",
       "      <td>7.252632</td>\n",
       "      <td>0.258947</td>\n",
       "      <td>0.683158</td>\n",
       "      <td>0.042105</td>\n",
       "      <td>43016.610526</td>\n",
       "      <td>18.455789</td>\n",
       "      <td>28.375789</td>\n",
       "      <td>17.449474</td>\n",
       "      <td>22.369474</td>\n",
       "      <td>11.535789</td>\n",
       "      <td>20.277895</td>\n",
       "      <td>7.344211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>TX</td>\n",
       "      <td>0.509057</td>\n",
       "      <td>0.490943</td>\n",
       "      <td>56.557874</td>\n",
       "      <td>6.146063</td>\n",
       "      <td>0.333465</td>\n",
       "      <td>0.980709</td>\n",
       "      <td>0.066929</td>\n",
       "      <td>49894.338583</td>\n",
       "      <td>16.335039</td>\n",
       "      <td>29.395669</td>\n",
       "      <td>18.382677</td>\n",
       "      <td>21.708268</td>\n",
       "      <td>15.865354</td>\n",
       "      <td>14.653543</td>\n",
       "      <td>6.028346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>UT</td>\n",
       "      <td>0.510897</td>\n",
       "      <td>0.489103</td>\n",
       "      <td>85.344828</td>\n",
       "      <td>0.434483</td>\n",
       "      <td>2.737931</td>\n",
       "      <td>0.786207</td>\n",
       "      <td>0.310345</td>\n",
       "      <td>59208.758621</td>\n",
       "      <td>12.189655</td>\n",
       "      <td>32.306897</td>\n",
       "      <td>19.158621</td>\n",
       "      <td>22.289655</td>\n",
       "      <td>13.337931</td>\n",
       "      <td>12.910345</td>\n",
       "      <td>4.365517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>VA</td>\n",
       "      <td>0.493487</td>\n",
       "      <td>0.506513</td>\n",
       "      <td>71.684211</td>\n",
       "      <td>18.397744</td>\n",
       "      <td>0.263158</td>\n",
       "      <td>2.062406</td>\n",
       "      <td>0.030827</td>\n",
       "      <td>56270.037594</td>\n",
       "      <td>14.367669</td>\n",
       "      <td>34.354135</td>\n",
       "      <td>18.537594</td>\n",
       "      <td>22.923308</td>\n",
       "      <td>10.771429</td>\n",
       "      <td>13.416541</td>\n",
       "      <td>6.033835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>VT</td>\n",
       "      <td>0.495166</td>\n",
       "      <td>0.504834</td>\n",
       "      <td>94.250000</td>\n",
       "      <td>0.842857</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.907143</td>\n",
       "      <td>0.021429</td>\n",
       "      <td>55252.714286</td>\n",
       "      <td>11.600000</td>\n",
       "      <td>37.750000</td>\n",
       "      <td>18.171429</td>\n",
       "      <td>21.078571</td>\n",
       "      <td>11.357143</td>\n",
       "      <td>11.635714</td>\n",
       "      <td>4.528571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>WA</td>\n",
       "      <td>0.500494</td>\n",
       "      <td>0.499506</td>\n",
       "      <td>76.376923</td>\n",
       "      <td>1.241026</td>\n",
       "      <td>2.020513</td>\n",
       "      <td>2.674359</td>\n",
       "      <td>0.287179</td>\n",
       "      <td>54112.461538</td>\n",
       "      <td>15.066667</td>\n",
       "      <td>33.315385</td>\n",
       "      <td>18.643590</td>\n",
       "      <td>21.356410</td>\n",
       "      <td>13.920513</td>\n",
       "      <td>12.751282</td>\n",
       "      <td>6.702564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>WI</td>\n",
       "      <td>0.504226</td>\n",
       "      <td>0.495774</td>\n",
       "      <td>89.275000</td>\n",
       "      <td>1.593056</td>\n",
       "      <td>2.675000</td>\n",
       "      <td>1.212500</td>\n",
       "      <td>0.022222</td>\n",
       "      <td>53849.416667</td>\n",
       "      <td>11.944444</td>\n",
       "      <td>30.884722</td>\n",
       "      <td>17.352778</td>\n",
       "      <td>21.622222</td>\n",
       "      <td>11.162500</td>\n",
       "      <td>18.973611</td>\n",
       "      <td>4.570833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>WV</td>\n",
       "      <td>0.498788</td>\n",
       "      <td>0.501212</td>\n",
       "      <td>94.430909</td>\n",
       "      <td>2.301818</td>\n",
       "      <td>0.178182</td>\n",
       "      <td>0.436364</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>41701.909091</td>\n",
       "      <td>18.574545</td>\n",
       "      <td>29.190909</td>\n",
       "      <td>19.756364</td>\n",
       "      <td>22.038182</td>\n",
       "      <td>14.041818</td>\n",
       "      <td>14.980000</td>\n",
       "      <td>8.063636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>WY</td>\n",
       "      <td>0.511775</td>\n",
       "      <td>0.488225</td>\n",
       "      <td>86.769565</td>\n",
       "      <td>0.582609</td>\n",
       "      <td>1.765217</td>\n",
       "      <td>0.752174</td>\n",
       "      <td>0.039130</td>\n",
       "      <td>59065.217391</td>\n",
       "      <td>11.226087</td>\n",
       "      <td>33.234783</td>\n",
       "      <td>18.030435</td>\n",
       "      <td>19.291304</td>\n",
       "      <td>16.143478</td>\n",
       "      <td>13.304348</td>\n",
       "      <td>4.282609</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   STATE  MenRatio  WomenRatio      White      Black     Native      Asian   \n",
       "0     AK  0.538550    0.461450  48.420690   1.179310  31.627586   5.982759  \\\n",
       "1     AL  0.487016    0.512984  65.168657  28.673134   0.607463   0.711940   \n",
       "2     AR  0.494146    0.505854  75.634667  16.132000   0.540000   0.692000   \n",
       "3     AZ  0.504501    0.495499  50.826667   1.813333  13.233333   1.293333   \n",
       "4     CA  0.506242    0.493758  54.762069   2.944828   1.650000   7.070690   \n",
       "5     CO  0.517922    0.482078  74.657813   1.482813   0.831250   1.109375   \n",
       "6     CT  0.492206    0.507794  76.037500   6.475000   0.125000   3.575000   \n",
       "7     DE  0.483901    0.516099  65.366667  20.100000   0.400000   2.866667   \n",
       "8     FL  0.514077    0.485923  68.120896  14.201493   0.395522   1.543284   \n",
       "9     GA  0.496204    0.503796  62.564151  28.144654   0.189937   1.201258   \n",
       "10    HI  0.494926    0.505074  26.000000   0.800000   0.140000  30.760000   \n",
       "11    IA  0.498614    0.501386  91.389899   1.378788   0.294949   1.082828   \n",
       "12    ID  0.508244    0.491756  82.920455   0.377273   1.515909   0.645455   \n",
       "13    IL  0.501124    0.498876  87.048039   5.148039   0.153922   1.221569   \n",
       "14    IN  0.498085    0.501915  90.754348   2.658696   0.188043   1.006522   \n",
       "15    KS  0.502307    0.497693  84.740952   1.748571   0.779048   0.803810   \n",
       "16    KY  0.496768    0.503232  91.810000   3.649167   0.182500   0.513333   \n",
       "17    LA  0.501864    0.498136  61.729687  31.775000   0.617188   0.807813   \n",
       "18    MA  0.486411    0.513589  77.828571   5.700000   0.285714   4.028571   \n",
       "19    MD  0.490849    0.509151  68.116667  19.837500   0.191667   3.295833   \n",
       "20    ME  0.490474    0.509526  94.393750   0.775000   0.768750   0.775000   \n",
       "21    MI  0.504041    0.495959  88.098795   3.874699   1.262651   0.997590   \n",
       "22    MN  0.502377    0.497623  88.937931   1.629885   1.935632   1.439080   \n",
       "23    MO  0.498636    0.501364  90.566957   3.561739   0.499130   0.631304   \n",
       "24    MS  0.489157    0.510843  54.315854  41.345122   0.509756   0.513415   \n",
       "25    MT  0.507062    0.492938  86.573214   0.221429   7.773214   0.467857   \n",
       "26    NC  0.491350    0.508650  68.111000  20.163000   1.549000   1.139000   \n",
       "27    ND  0.511510    0.488490  87.607547   0.877358   6.577358   0.494340   \n",
       "28    NE  0.500793    0.499207  89.511828   0.818280   1.191398   0.513978   \n",
       "29    NH  0.496653    0.503347  92.950000   1.020000   0.190000   1.820000   \n",
       "30    NJ  0.489672    0.510328  62.442857  11.338095   0.100000   7.104762   \n",
       "31    NM  0.503755    0.496245  41.984848   1.254545   6.881818   0.757576   \n",
       "32    NV  0.518167    0.481833  72.294118   2.188235   3.858824   2.029412   \n",
       "33    NY  0.497647    0.502353  81.320968   5.811290   0.374194   2.827419   \n",
       "34    OH  0.496876    0.503124  90.285227   4.080682   0.146591   0.931818   \n",
       "35    OK  0.502387    0.497613  70.912987   3.377922   8.898701   0.757143   \n",
       "36    OR  0.500206    0.499794  80.933333   0.736111   1.716667   1.602778   \n",
       "37    PA  0.502318    0.497682  88.253731   4.507463   0.123881   1.441791   \n",
       "38    RI  0.485534    0.514466  84.340000   3.000000   0.320000   2.500000   \n",
       "39    SC  0.489932    0.510068  57.000000  35.491304   0.354348   0.804348   \n",
       "40    SD  0.505261    0.494739  80.183333   0.556061  13.892424   0.718182   \n",
       "41    TN  0.495863    0.504137  86.431579   7.252632   0.258947   0.683158   \n",
       "42    TX  0.509057    0.490943  56.557874   6.146063   0.333465   0.980709   \n",
       "43    UT  0.510897    0.489103  85.344828   0.434483   2.737931   0.786207   \n",
       "44    VA  0.493487    0.506513  71.684211  18.397744   0.263158   2.062406   \n",
       "45    VT  0.495166    0.504834  94.250000   0.842857   0.350000   0.907143   \n",
       "46    WA  0.500494    0.499506  76.376923   1.241026   2.020513   2.674359   \n",
       "47    WI  0.504226    0.495774  89.275000   1.593056   2.675000   1.212500   \n",
       "48    WV  0.498788    0.501212  94.430909   2.301818   0.178182   0.436364   \n",
       "49    WY  0.511775    0.488225  86.769565   0.582609   1.765217   0.752174   \n",
       "\n",
       "      Pacific        Income    Poverty  Professional    Service     Office   \n",
       "0    0.544828  66425.448276  13.555172     31.868966  18.727586  20.365517  \\\n",
       "1    0.017910  40271.402985  20.949254     28.095522  16.829851  22.555224   \n",
       "2    0.077333  39025.080000  20.421333     28.506667  17.640000  21.600000   \n",
       "3    0.126667  45816.666667  20.193333     30.006667  22.566667  23.226667   \n",
       "4    0.291379  61046.758621  15.737931     34.212069  20.655172  21.960345   \n",
       "5    0.114062  54353.562500  13.234375     35.031250  19.917188  20.831250   \n",
       "6    0.000000  74496.000000   9.200000     41.412500  18.037500  22.600000   \n",
       "7    0.000000  61294.666667  12.300000     36.900000  18.500000  23.433333   \n",
       "8    0.076119  47144.328358  17.150746     31.208955  21.243284  24.908955   \n",
       "9    0.045912  43268.786164  21.192453     29.157862  17.684906  22.554088   \n",
       "10  14.460000  68663.000000  11.660000     29.560000  28.220000  23.400000   \n",
       "11   0.060606  53436.080808  11.500000     32.123232  16.315152  21.062626   \n",
       "12   0.086364  46171.931818  15.472727     29.818182  18.240909  20.634091   \n",
       "13   0.020588  52930.382353  13.955882     30.804902  18.334314  22.282353   \n",
       "14   0.021739  51877.402174  13.176087     28.791304  16.490217  20.953261   \n",
       "15   0.054286  50022.571429  12.368571     34.043810  16.520952  20.320952   \n",
       "16   0.025833  41470.491667  21.304167     28.687500  17.045000  22.003333   \n",
       "17   0.020313  42654.078125  21.900000     29.125000  19.598437  22.784375   \n",
       "18   0.021429  71030.714286  11.200000     41.835714  18.421429  22.100000   \n",
       "19   0.025000  72541.166667  10.858333     39.991667  18.120833  22.570833   \n",
       "20   0.012500  49680.812500  13.993750     33.637500  18.862500  22.006250   \n",
       "21   0.016867  47530.518072  15.665060     29.680723  19.616867  22.428916   \n",
       "22   0.029885  57530.000000  11.040230     33.309195  17.254023  21.089655   \n",
       "23   0.084348  44435.304348  17.261739     29.287826  18.395652  21.799130   \n",
       "24   0.015854  37018.719512  24.941463     28.543902  17.971951  21.484146   \n",
       "25   0.030357  47746.750000  14.589286     36.616071  17.710714  19.862500   \n",
       "26   0.036000  44551.670000  18.322000     30.847000  19.304000  22.037000   \n",
       "27   0.018868  59795.962264  10.628302     36.533962  16.266038  19.179245   \n",
       "28   0.072043  51928.354839  11.195699     35.009677  15.682796  20.421505   \n",
       "29   0.020000  64901.900000   9.270000     37.830000  17.580000  23.130000   \n",
       "30   0.004762  77047.761905  10.495238     40.214286  17.204762  24.033333   \n",
       "31   0.021212  41197.212121  21.742424     32.969697  22.218182  22.093939   \n",
       "32   0.223529  56859.000000  12.700000     29.382353  20.276471  20.941176   \n",
       "33   0.019355  58309.258065  14.016129     35.783871  19.612903  22.732258   \n",
       "34   0.019318  51742.204545  14.507955     30.580682  17.213636  21.750000   \n",
       "35   0.110390  46219.857143  17.085714     30.461039  17.680519  21.858442   \n",
       "36   0.266667  48502.500000  15.908333     32.875000  19.300000  21.691667   \n",
       "37   0.002985  53281.880597  12.832836     31.901493  18.065672  22.229851   \n",
       "38   0.060000  69906.400000  10.020000     41.880000  18.880000  22.720000   \n",
       "39   0.047826  42126.782609  20.063043     28.743478  18.636957  23.210870   \n",
       "40   0.062121  50408.742424  16.206061     36.937879  16.769697  20.162121   \n",
       "41   0.042105  43016.610526  18.455789     28.375789  17.449474  22.369474   \n",
       "42   0.066929  49894.338583  16.335039     29.395669  18.382677  21.708268   \n",
       "43   0.310345  59208.758621  12.189655     32.306897  19.158621  22.289655   \n",
       "44   0.030827  56270.037594  14.367669     34.354135  18.537594  22.923308   \n",
       "45   0.021429  55252.714286  11.600000     37.750000  18.171429  21.078571   \n",
       "46   0.287179  54112.461538  15.066667     33.315385  18.643590  21.356410   \n",
       "47   0.022222  53849.416667  11.944444     30.884722  17.352778  21.622222   \n",
       "48   0.020000  41701.909091  18.574545     29.190909  19.756364  22.038182   \n",
       "49   0.039130  59065.217391  11.226087     33.234783  18.030435  19.291304   \n",
       "\n",
       "    Construction  Production  Unemployment  \n",
       "0      14.789655   14.244828      9.655172  \n",
       "1      11.605970   20.905970      9.023881  \n",
       "2      13.008000   19.256000      7.292000  \n",
       "3      13.153333   11.073333      9.766667  \n",
       "4      12.467241   10.703448      8.265517  \n",
       "5      14.535937    9.681250      5.793750  \n",
       "6       8.187500    9.775000      6.775000  \n",
       "7       9.400000   11.766667      6.433333  \n",
       "8      12.074627   10.577612      7.765672  \n",
       "9      12.730818   17.872327      8.053459  \n",
       "10      8.260000   10.540000      4.120000  \n",
       "11     11.577778   18.921212      3.895960  \n",
       "12     16.493182   14.827273      5.622727  \n",
       "13     10.648039   17.935294      6.611765  \n",
       "14     10.935870   22.826087      5.445652  \n",
       "15     14.051429   15.064762      3.990476  \n",
       "16     12.188333   20.086667      7.672500  \n",
       "17     14.356250   14.129687      7.871875  \n",
       "18      8.592857    9.050000      5.842857  \n",
       "19      9.770833    9.566667      6.120833  \n",
       "20     12.812500   12.668750      5.800000  \n",
       "21     10.713253   17.562651      7.620482  \n",
       "22     11.722989   16.616092      3.954023  \n",
       "23     12.403478   18.119130      6.026087  \n",
       "24     12.287805   19.708537     10.007317  \n",
       "25     16.180357    9.641071      4.525000  \n",
       "26     11.708000   16.105000      7.965000  \n",
       "27     15.269811   12.749057      2.728302  \n",
       "28     14.298925   14.593548      2.847312  \n",
       "29      9.640000   11.790000      4.540000  \n",
       "30      7.890476   10.628571      7.119048  \n",
       "31     13.054545    9.660606      7.566667  \n",
       "32     17.641176   11.735294      7.394118  \n",
       "33      9.804839   12.066129      6.577419  \n",
       "34      9.963636   20.496591      6.084091  \n",
       "35     14.200000   15.801299      5.853247  \n",
       "36     12.669444   13.461111      7.455556  \n",
       "37     10.597015   17.189552      6.031343  \n",
       "38      7.260000    9.280000      5.860000  \n",
       "39     10.621739   18.776087      8.773913  \n",
       "40     13.695455   12.436364      4.821212  \n",
       "41     11.535789   20.277895      7.344211  \n",
       "42     15.865354   14.653543      6.028346  \n",
       "43     13.337931   12.910345      4.365517  \n",
       "44     10.771429   13.416541      6.033835  \n",
       "45     11.357143   11.635714      4.528571  \n",
       "46     13.920513   12.751282      6.702564  \n",
       "47     11.162500   18.973611      4.570833  \n",
       "48     14.041818   14.980000      8.063636  \n",
       "49     16.143478   13.304348      4.282609  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_stateval = pd.read_csv(os.path.join(os.path.dirname(CURR_DIR),'project_files','demo.csv'))\n",
    "state_mapping = {\n",
    "    'Alabama': 'AL',\n",
    "    'Alaska': 'AK',\n",
    "    'Arizona': 'AZ',\n",
    "    'Arkansas': 'AR',\n",
    "    'California': 'CA',\n",
    "    'Colorado': 'CO',\n",
    "    'Connecticut': 'CT',\n",
    "    'Delaware': 'DE',\n",
    "    'Florida': 'FL',\n",
    "    'Georgia': 'GA',\n",
    "    'Hawaii': 'HI',\n",
    "    'Idaho': 'ID',\n",
    "    'Illinois': 'IL',\n",
    "    'Indiana': 'IN',\n",
    "    'Iowa': 'IA',\n",
    "    'Kansas': 'KS',\n",
    "    'Kentucky': 'KY',\n",
    "    'Louisiana': 'LA',\n",
    "    'Maine': 'ME',\n",
    "    'Maryland': 'MD',\n",
    "    'Massachusetts': 'MA',\n",
    "    'Michigan': 'MI',\n",
    "    'Minnesota': 'MN',\n",
    "    'Mississippi': 'MS',\n",
    "    'Missouri': 'MO',\n",
    "    'Montana': 'MT',\n",
    "    'Nebraska': 'NE',\n",
    "    'Nevada': 'NV',\n",
    "    'New Hampshire': 'NH',\n",
    "    'New Jersey': 'NJ',\n",
    "    'New Mexico': 'NM',\n",
    "    'New York': 'NY',\n",
    "    'North Carolina': 'NC',\n",
    "    'North Dakota': 'ND',\n",
    "    'Ohio': 'OH',\n",
    "    'Oklahoma': 'OK',\n",
    "    'Oregon': 'OR',\n",
    "    'Pennsylvania': 'PA',\n",
    "    'Rhode Island': 'RI',\n",
    "    'South Carolina': 'SC',\n",
    "    'South Dakota': 'SD',\n",
    "    'Tennessee': 'TN',\n",
    "    'Texas': 'TX',\n",
    "    'Utah': 'UT',\n",
    "    'Vermont': 'VT',\n",
    "    'Virginia': 'VA',\n",
    "    'Washington': 'WA',\n",
    "    'West Virginia': 'WV',\n",
    "    'Wisconsin': 'WI',\n",
    "    'Wyoming': 'WY'\n",
    "}\n",
    "\n",
    "\n",
    "df_stateval['STATE'] = df_stateval['State'].map(state_mapping)\n",
    "df_stateval['MenRatio'] = df_stateval['Men'] / df_stateval['TotalPop']\n",
    "df_stateval['WomenRatio'] = df_stateval['Women'] / df_stateval['TotalPop']\n",
    "df_selected=df_stateval[['STATE','MenRatio','WomenRatio','White','Black','Native','Asian','Pacific','Income','Poverty','Professional','Service','Office','Construction','Production','Unemployment']]\n",
    "result_df = df_selected.groupby('STATE').mean().reset_index()\n",
    "result_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1b92c740",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STORE</th>\n",
       "      <th>CITY</th>\n",
       "      <th>STATE</th>\n",
       "      <th>ZIP</th>\n",
       "      <th>MenRatio</th>\n",
       "      <th>WomenRatio</th>\n",
       "      <th>White</th>\n",
       "      <th>Black</th>\n",
       "      <th>Native</th>\n",
       "      <th>Asian</th>\n",
       "      <th>Pacific</th>\n",
       "      <th>Income</th>\n",
       "      <th>Poverty</th>\n",
       "      <th>Professional</th>\n",
       "      <th>Service</th>\n",
       "      <th>Office</th>\n",
       "      <th>Construction</th>\n",
       "      <th>Production</th>\n",
       "      <th>Unemployment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>ST. PETERSBURG</td>\n",
       "      <td>FL</td>\n",
       "      <td>33710</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>0.485923</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>14.201493</td>\n",
       "      <td>0.395522</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>0.076119</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>21.243284</td>\n",
       "      <td>24.908955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>10.577612</td>\n",
       "      <td>7.765672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>102</td>\n",
       "      <td>TAMPA</td>\n",
       "      <td>FL</td>\n",
       "      <td>33607</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>0.485923</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>14.201493</td>\n",
       "      <td>0.395522</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>0.076119</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>21.243284</td>\n",
       "      <td>24.908955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>10.577612</td>\n",
       "      <td>7.765672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202</td>\n",
       "      <td>TAMPA</td>\n",
       "      <td>FL</td>\n",
       "      <td>33612</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>0.485923</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>14.201493</td>\n",
       "      <td>0.395522</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>0.076119</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>21.243284</td>\n",
       "      <td>24.908955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>10.577612</td>\n",
       "      <td>7.765672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>302</td>\n",
       "      <td>TAMPA</td>\n",
       "      <td>FL</td>\n",
       "      <td>33625</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>0.485923</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>14.201493</td>\n",
       "      <td>0.395522</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>0.076119</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>21.243284</td>\n",
       "      <td>24.908955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>10.577612</td>\n",
       "      <td>7.765672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>402</td>\n",
       "      <td>BRANDON</td>\n",
       "      <td>FL</td>\n",
       "      <td>33511</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>0.485923</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>14.201493</td>\n",
       "      <td>0.395522</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>0.076119</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>21.243284</td>\n",
       "      <td>24.908955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>10.577612</td>\n",
       "      <td>7.765672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>448</th>\n",
       "      <td>7704</td>\n",
       "      <td>RICHMOND</td>\n",
       "      <td>VA</td>\n",
       "      <td>23235</td>\n",
       "      <td>0.493487</td>\n",
       "      <td>0.506513</td>\n",
       "      <td>71.684211</td>\n",
       "      <td>18.397744</td>\n",
       "      <td>0.263158</td>\n",
       "      <td>2.062406</td>\n",
       "      <td>0.030827</td>\n",
       "      <td>56270.037594</td>\n",
       "      <td>14.367669</td>\n",
       "      <td>34.354135</td>\n",
       "      <td>18.537594</td>\n",
       "      <td>22.923308</td>\n",
       "      <td>10.771429</td>\n",
       "      <td>13.416541</td>\n",
       "      <td>6.033835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>7804</td>\n",
       "      <td>GLEN ALLEN</td>\n",
       "      <td>VA</td>\n",
       "      <td>23060</td>\n",
       "      <td>0.493487</td>\n",
       "      <td>0.506513</td>\n",
       "      <td>71.684211</td>\n",
       "      <td>18.397744</td>\n",
       "      <td>0.263158</td>\n",
       "      <td>2.062406</td>\n",
       "      <td>0.030827</td>\n",
       "      <td>56270.037594</td>\n",
       "      <td>14.367669</td>\n",
       "      <td>34.354135</td>\n",
       "      <td>18.537594</td>\n",
       "      <td>22.923308</td>\n",
       "      <td>10.771429</td>\n",
       "      <td>13.416541</td>\n",
       "      <td>6.033835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>450</th>\n",
       "      <td>7904</td>\n",
       "      <td>RICHMOND</td>\n",
       "      <td>VA</td>\n",
       "      <td>23235</td>\n",
       "      <td>0.493487</td>\n",
       "      <td>0.506513</td>\n",
       "      <td>71.684211</td>\n",
       "      <td>18.397744</td>\n",
       "      <td>0.263158</td>\n",
       "      <td>2.062406</td>\n",
       "      <td>0.030827</td>\n",
       "      <td>56270.037594</td>\n",
       "      <td>14.367669</td>\n",
       "      <td>34.354135</td>\n",
       "      <td>18.537594</td>\n",
       "      <td>22.923308</td>\n",
       "      <td>10.771429</td>\n",
       "      <td>13.416541</td>\n",
       "      <td>6.033835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>451</th>\n",
       "      <td>8004</td>\n",
       "      <td>COLONIAL HEIGHTS</td>\n",
       "      <td>VA</td>\n",
       "      <td>23834</td>\n",
       "      <td>0.493487</td>\n",
       "      <td>0.506513</td>\n",
       "      <td>71.684211</td>\n",
       "      <td>18.397744</td>\n",
       "      <td>0.263158</td>\n",
       "      <td>2.062406</td>\n",
       "      <td>0.030827</td>\n",
       "      <td>56270.037594</td>\n",
       "      <td>14.367669</td>\n",
       "      <td>34.354135</td>\n",
       "      <td>18.537594</td>\n",
       "      <td>22.923308</td>\n",
       "      <td>10.771429</td>\n",
       "      <td>13.416541</td>\n",
       "      <td>6.033835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>452</th>\n",
       "      <td>9909</td>\n",
       "      <td>CHEYENNE</td>\n",
       "      <td>WY</td>\n",
       "      <td>82009</td>\n",
       "      <td>0.511775</td>\n",
       "      <td>0.488225</td>\n",
       "      <td>86.769565</td>\n",
       "      <td>0.582609</td>\n",
       "      <td>1.765217</td>\n",
       "      <td>0.752174</td>\n",
       "      <td>0.039130</td>\n",
       "      <td>59065.217391</td>\n",
       "      <td>11.226087</td>\n",
       "      <td>33.234783</td>\n",
       "      <td>18.030435</td>\n",
       "      <td>19.291304</td>\n",
       "      <td>16.143478</td>\n",
       "      <td>13.304348</td>\n",
       "      <td>4.282609</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>453 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     STORE              CITY STATE    ZIP  MenRatio  WomenRatio      White   \n",
       "0        2    ST. PETERSBURG    FL  33710  0.514077    0.485923  68.120896  \\\n",
       "1      102             TAMPA    FL  33607  0.514077    0.485923  68.120896   \n",
       "2      202             TAMPA    FL  33612  0.514077    0.485923  68.120896   \n",
       "3      302             TAMPA    FL  33625  0.514077    0.485923  68.120896   \n",
       "4      402           BRANDON    FL  33511  0.514077    0.485923  68.120896   \n",
       "..     ...               ...   ...    ...       ...         ...        ...   \n",
       "448   7704          RICHMOND    VA  23235  0.493487    0.506513  71.684211   \n",
       "449   7804        GLEN ALLEN    VA  23060  0.493487    0.506513  71.684211   \n",
       "450   7904          RICHMOND    VA  23235  0.493487    0.506513  71.684211   \n",
       "451   8004  COLONIAL HEIGHTS    VA  23834  0.493487    0.506513  71.684211   \n",
       "452   9909          CHEYENNE    WY  82009  0.511775    0.488225  86.769565   \n",
       "\n",
       "         Black    Native     Asian   Pacific        Income    Poverty   \n",
       "0    14.201493  0.395522  1.543284  0.076119  47144.328358  17.150746  \\\n",
       "1    14.201493  0.395522  1.543284  0.076119  47144.328358  17.150746   \n",
       "2    14.201493  0.395522  1.543284  0.076119  47144.328358  17.150746   \n",
       "3    14.201493  0.395522  1.543284  0.076119  47144.328358  17.150746   \n",
       "4    14.201493  0.395522  1.543284  0.076119  47144.328358  17.150746   \n",
       "..         ...       ...       ...       ...           ...        ...   \n",
       "448  18.397744  0.263158  2.062406  0.030827  56270.037594  14.367669   \n",
       "449  18.397744  0.263158  2.062406  0.030827  56270.037594  14.367669   \n",
       "450  18.397744  0.263158  2.062406  0.030827  56270.037594  14.367669   \n",
       "451  18.397744  0.263158  2.062406  0.030827  56270.037594  14.367669   \n",
       "452   0.582609  1.765217  0.752174  0.039130  59065.217391  11.226087   \n",
       "\n",
       "     Professional    Service     Office  Construction  Production   \n",
       "0       31.208955  21.243284  24.908955     12.074627   10.577612  \\\n",
       "1       31.208955  21.243284  24.908955     12.074627   10.577612   \n",
       "2       31.208955  21.243284  24.908955     12.074627   10.577612   \n",
       "3       31.208955  21.243284  24.908955     12.074627   10.577612   \n",
       "4       31.208955  21.243284  24.908955     12.074627   10.577612   \n",
       "..            ...        ...        ...           ...         ...   \n",
       "448     34.354135  18.537594  22.923308     10.771429   13.416541   \n",
       "449     34.354135  18.537594  22.923308     10.771429   13.416541   \n",
       "450     34.354135  18.537594  22.923308     10.771429   13.416541   \n",
       "451     34.354135  18.537594  22.923308     10.771429   13.416541   \n",
       "452     33.234783  18.030435  19.291304     16.143478   13.304348   \n",
       "\n",
       "     Unemployment  \n",
       "0        7.765672  \n",
       "1        7.765672  \n",
       "2        7.765672  \n",
       "3        7.765672  \n",
       "4        7.765672  \n",
       "..            ...  \n",
       "448      6.033835  \n",
       "449      6.033835  \n",
       "450      6.033835  \n",
       "451      6.033835  \n",
       "452      4.282609  \n",
       "\n",
       "[453 rows x 19 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_strinfo_updated = df_strinfo.merge(result_df, on = 'STATE')\n",
    "df_strinfo_updated"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5e2a3511",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>STORE</th>\n",
       "      <th>avg_quan</th>\n",
       "      <th>avg_orig</th>\n",
       "      <th>avg_sprice</th>\n",
       "      <th>purchase_count</th>\n",
       "      <th>return_count</th>\n",
       "      <th>purchase_prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>2007</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>2102</td>\n",
       "      <td>1.0</td>\n",
       "      <td>293.333333</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>7602</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>2503</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>50.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>409</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>47.5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SKU  STORE  avg_quan    avg_orig  avg_sprice  purchase_count  return_count   \n",
       "0    3   2007       1.0    0.000000         4.5               2             0  \\\n",
       "1    3   2102       1.0  293.333333        30.0               2             1   \n",
       "2    4   7602       1.0    0.000000        40.0               2             0   \n",
       "3    5   2503       1.0    0.000000        50.0               2             0   \n",
       "4    8    409       1.0    0.000000        47.5               2             0   \n",
       "\n",
       "   purchase_prob  \n",
       "0       1.000000  \n",
       "1       0.666667  \n",
       "2       1.000000  \n",
       "3       1.000000  \n",
       "4       1.000000  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trans_data_path = os.path.join(os.path.dirname(CURR_DIR),'project_files','df_trans_grp_sku_store_v2.csv')\n",
    "df_trnsact = pd.read_csv(trans_data_path)\n",
    "df_trnsact.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a174e395",
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_empty_spaces(df, col_name):\n",
    "    print(f\"Analysing {col_name}\")\n",
    "    for _ in df[col_name].unique():\n",
    "        if not(len(_) == len(_.strip()) and len(_) > 0):\n",
    "            print(f\"Found Empty Spaces! Fix {col_name}\")\n",
    "            break\n",
    "            \n",
    "def _fix_empty_spaces(entry):\n",
    "    if len(entry) == 0:\n",
    "        return None\n",
    "    \n",
    "    return entry.strip()\n",
    "\n",
    "def fix_empty_spaces(df, col_name):\n",
    "    df[col_name] = df[col_name].apply(lambda x : _fix_empty_spaces(x))\n",
    "    df.dropna(subset=[col_name], inplace=True)\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ab433407",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Analysing DEPTDESC\n"
     ]
    }
   ],
   "source": [
    "find_empty_spaces(df=df_deptinfo, col_name='DEPTDESC')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ffa16c3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Analysing STYLE\n",
      "Analysing COLOR\n",
      "Found Empty Spaces! Fix COLOR\n",
      "Analysing SIZE\n",
      "Analysing BRAND\n",
      "Found Empty Spaces! Fix BRAND\n",
      "Analysing COLOR\n",
      "Analysing BRAND\n"
     ]
    }
   ],
   "source": [
    "find_empty_spaces(df_skuinfo, col_name=\"STYLE\")\n",
    "find_empty_spaces(df_skuinfo, col_name=\"COLOR\")\n",
    "find_empty_spaces(df_skuinfo, col_name=\"SIZE\")\n",
    "find_empty_spaces(df_skuinfo, col_name=\"BRAND\")\n",
    "\n",
    "df_skuinfo = fix_empty_spaces(df_skuinfo, col_name=\"COLOR\")\n",
    "find_empty_spaces(df_skuinfo, col_name=\"COLOR\")\n",
    "df_skuinfo = fix_empty_spaces(df_skuinfo, col_name=\"BRAND\")\n",
    "find_empty_spaces(df_skuinfo, col_name=\"BRAND\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2e792983",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Analysing CITY\n",
      "Analysing STATE\n",
      "Analysing CITY\n",
      "Analysing STATE\n"
     ]
    }
   ],
   "source": [
    "find_empty_spaces(df_strinfo, 'CITY')\n",
    "find_empty_spaces(df_strinfo, 'STATE')\n",
    "\n",
    "fix_empty_spaces(df_strinfo, 'CITY')\n",
    "fix_empty_spaces(df_strinfo, 'STATE')\n",
    "\n",
    "find_empty_spaces(df_strinfo, 'CITY')\n",
    "find_empty_spaces(df_strinfo, 'STATE')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a86e0e5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1531682 453 20640000\n"
     ]
    }
   ],
   "source": [
    "df_sku = df_skuinfo.copy()\n",
    "df_str = df_strinfo.copy()\n",
    "df_skst = df_skstinfo.copy()\n",
    "#df_trans = df_trnsact.copy()\n",
    "\n",
    "print(df_sku.shape[0], df_str.shape[0], df_skst.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "724fca64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>COST</th>\n",
       "      <th>RETAIL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>123.36</td>\n",
       "      <td>440.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>9.72</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>16.56</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15</td>\n",
       "      <td>47.60</td>\n",
       "      <td>119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>39</td>\n",
       "      <td>47.97</td>\n",
       "      <td>119.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SKU    COST  RETAIL\n",
       "0    3  123.36   440.0\n",
       "1    4    9.72    12.0\n",
       "2    8   16.56    40.0\n",
       "3   15   47.60   119.0\n",
       "4   39   47.97   119.0"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_skst = df_skst.groupby('SKU')[['COST','RETAIL']].mean().reset_index()\n",
    "df_skst.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b6d112a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dropping not to be used columns\n",
    "df_sku = df_sku[['SKU','DEPT', 'PACKSIZE', 'VENDOR', 'BRAND', 'CLASSID']]\n",
    "df_skst = df_skst[['SKU','COST','RETAIL']]\n",
    "#df_trans = df_trans[['SKU','avg_quan','avg_orig', 'avg_sprice', 'purchase_prob']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3d982f32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>STORE</th>\n",
       "      <th>avg_quan</th>\n",
       "      <th>avg_orig</th>\n",
       "      <th>avg_sprice</th>\n",
       "      <th>purchase_count</th>\n",
       "      <th>return_count</th>\n",
       "      <th>purchase_prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>2007</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>2102</td>\n",
       "      <td>1.0</td>\n",
       "      <td>293.333333</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>7602</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>2503</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>50.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>409</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>47.5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SKU  STORE  avg_quan    avg_orig  avg_sprice  purchase_count  return_count   \n",
       "0    3   2007       1.0    0.000000         4.5               2             0  \\\n",
       "1    3   2102       1.0  293.333333        30.0               2             1   \n",
       "2    4   7602       1.0    0.000000        40.0               2             0   \n",
       "3    5   2503       1.0    0.000000        50.0               2             0   \n",
       "4    8    409       1.0    0.000000        47.5               2             0   \n",
       "\n",
       "   purchase_prob  \n",
       "0       1.000000  \n",
       "1       0.666667  \n",
       "2       1.000000  \n",
       "3       1.000000  \n",
       "4       1.000000  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# df_trans = pd.read_csv('/Users/kevinli/Downloads/df_trans_grp_sku_store.csv')\n",
    "\n",
    "trans_data_path = os.path.join(os.path.dirname(CURR_DIR),'project_files','df_trans_grp_sku_store_v2.csv')\n",
    "df_trans = pd.read_csv(trans_data_path)\n",
    "df_trans.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "7376509d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "391507 1531682 395409\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>DEPT</th>\n",
       "      <th>PACKSIZE</th>\n",
       "      <th>VENDOR</th>\n",
       "      <th>BRAND</th>\n",
       "      <th>CLASSID</th>\n",
       "      <th>COST</th>\n",
       "      <th>RETAIL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50691</td>\n",
       "      <td>8101</td>\n",
       "      <td>1</td>\n",
       "      <td>613313</td>\n",
       "      <td>JH COLLE</td>\n",
       "      <td>002</td>\n",
       "      <td>20.15</td>\n",
       "      <td>54.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>50696</td>\n",
       "      <td>5404</td>\n",
       "      <td>1</td>\n",
       "      <td>934938</td>\n",
       "      <td>KIDS HEA</td>\n",
       "      <td>002</td>\n",
       "      <td>15.40</td>\n",
       "      <td>44.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>50703</td>\n",
       "      <td>6404</td>\n",
       "      <td>1</td>\n",
       "      <td>6436489</td>\n",
       "      <td>LEVI STR</td>\n",
       "      <td>502</td>\n",
       "      <td>13.25</td>\n",
       "      <td>14.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50710</td>\n",
       "      <td>6006</td>\n",
       "      <td>1</td>\n",
       "      <td>8016880</td>\n",
       "      <td>UNISA AM</td>\n",
       "      <td>111</td>\n",
       "      <td>31.50</td>\n",
       "      <td>75.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>50716</td>\n",
       "      <td>5404</td>\n",
       "      <td>1</td>\n",
       "      <td>4014658</td>\n",
       "      <td>NANNETTE</td>\n",
       "      <td>00D</td>\n",
       "      <td>11.00</td>\n",
       "      <td>24.990000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     SKU  DEPT  PACKSIZE   VENDOR     BRAND CLASSID   COST     RETAIL\n",
       "0  50691  8101         1   613313  JH COLLE     002  20.15  54.000000\n",
       "1  50696  5404         1   934938  KIDS HEA     002  15.40  44.000000\n",
       "2  50703  6404         1  6436489  LEVI STR     502  13.25  14.333333\n",
       "3  50710  6006         1  8016880  UNISA AM     111  31.50  75.000000\n",
       "4  50716  5404         1  4014658  NANNETTE     00D  11.00  24.990000"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Note : Here some SKU's will be dropped which don't have COST and RETAIL\n",
    "df_sku_skst = df_sku.merge(df_skst, on='SKU', how='inner')\n",
    "print(df_sku_skst.shape[0], df_sku.shape[0], df_skst.shape[0])\n",
    "df_sku_skst.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "0f8566aa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8684439 391507 20936031\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>DEPT</th>\n",
       "      <th>PACKSIZE</th>\n",
       "      <th>VENDOR</th>\n",
       "      <th>BRAND</th>\n",
       "      <th>CLASSID</th>\n",
       "      <th>COST</th>\n",
       "      <th>RETAIL</th>\n",
       "      <th>STORE</th>\n",
       "      <th>avg_quan</th>\n",
       "      <th>avg_orig</th>\n",
       "      <th>avg_sprice</th>\n",
       "      <th>purchase_count</th>\n",
       "      <th>return_count</th>\n",
       "      <th>purchase_prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50703</td>\n",
       "      <td>6404</td>\n",
       "      <td>1</td>\n",
       "      <td>6436489</td>\n",
       "      <td>LEVI STR</td>\n",
       "      <td>502</td>\n",
       "      <td>13.250</td>\n",
       "      <td>14.333333</td>\n",
       "      <td>8204</td>\n",
       "      <td>1.0</td>\n",
       "      <td>16.75</td>\n",
       "      <td>9.214000</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>50716</td>\n",
       "      <td>5404</td>\n",
       "      <td>1</td>\n",
       "      <td>4014658</td>\n",
       "      <td>NANNETTE</td>\n",
       "      <td>00D</td>\n",
       "      <td>11.000</td>\n",
       "      <td>24.990000</td>\n",
       "      <td>1709</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.99</td>\n",
       "      <td>24.990000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>50725</td>\n",
       "      <td>2503</td>\n",
       "      <td>1</td>\n",
       "      <td>13237</td>\n",
       "      <td>JODY CAL</td>\n",
       "      <td>211</td>\n",
       "      <td>20.000</td>\n",
       "      <td>23.779412</td>\n",
       "      <td>3007</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.00</td>\n",
       "      <td>32.830002</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50729</td>\n",
       "      <td>7106</td>\n",
       "      <td>1</td>\n",
       "      <td>5010255</td>\n",
       "      <td>ENZO ANG</td>\n",
       "      <td>214</td>\n",
       "      <td>27.625</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>202</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.00</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>50729</td>\n",
       "      <td>7106</td>\n",
       "      <td>1</td>\n",
       "      <td>5010255</td>\n",
       "      <td>ENZO ANG</td>\n",
       "      <td>214</td>\n",
       "      <td>27.625</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>302</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.00</td>\n",
       "      <td>27.375000</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     SKU  DEPT  PACKSIZE   VENDOR     BRAND CLASSID    COST     RETAIL  STORE   \n",
       "0  50703  6404         1  6436489  LEVI STR     502  13.250  14.333333   8204  \\\n",
       "1  50716  5404         1  4014658  NANNETTE     00D  11.000  24.990000   1709   \n",
       "2  50725  2503         1    13237  JODY CAL     211  20.000  23.779412   3007   \n",
       "3  50729  7106         1  5010255  ENZO ANG     214  27.625  15.000000    202   \n",
       "4  50729  7106         1  5010255  ENZO ANG     214  27.625  15.000000    302   \n",
       "\n",
       "   avg_quan  avg_orig  avg_sprice  purchase_count  return_count  purchase_prob  \n",
       "0       1.0     16.75    9.214000               4             1            0.8  \n",
       "1       1.0     24.99   24.990000               2             0            1.0  \n",
       "2       1.0     49.00   32.830002               2             0            1.0  \n",
       "3       1.0     60.00   15.000000               2             0            1.0  \n",
       "4       1.0     60.00   27.375000               4             0            1.0  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sku_skst_trans = df_sku_skst.merge(df_trans, on='SKU', how='inner')\n",
    "print(df_sku_skst_trans.shape[0], df_sku_skst.shape[0], df_trans.shape[0])\n",
    "df_sku_skst_trans.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7adc281",
   "metadata": {},
   "source": [
    "## Feature Engineering Part"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "90af59ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SKU</th>\n",
       "      <th>DEPT</th>\n",
       "      <th>PACKSIZE</th>\n",
       "      <th>VENDOR</th>\n",
       "      <th>BRAND</th>\n",
       "      <th>CLASSID</th>\n",
       "      <th>COST</th>\n",
       "      <th>RETAIL</th>\n",
       "      <th>STORE</th>\n",
       "      <th>avg_quan</th>\n",
       "      <th>avg_orig</th>\n",
       "      <th>avg_sprice</th>\n",
       "      <th>purchase_count</th>\n",
       "      <th>return_count</th>\n",
       "      <th>purchase_prob</th>\n",
       "      <th>PROF_MARG</th>\n",
       "      <th>DISCOUNTED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50703</td>\n",
       "      <td>6404</td>\n",
       "      <td>1</td>\n",
       "      <td>6436489</td>\n",
       "      <td>LEVI STR</td>\n",
       "      <td>502</td>\n",
       "      <td>13.250</td>\n",
       "      <td>14.333333</td>\n",
       "      <td>8204</td>\n",
       "      <td>1.0</td>\n",
       "      <td>16.75</td>\n",
       "      <td>9.214000</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.8</td>\n",
       "      <td>0.924419</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>50716</td>\n",
       "      <td>5404</td>\n",
       "      <td>1</td>\n",
       "      <td>4014658</td>\n",
       "      <td>NANNETTE</td>\n",
       "      <td>00D</td>\n",
       "      <td>11.000</td>\n",
       "      <td>24.990000</td>\n",
       "      <td>1709</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.99</td>\n",
       "      <td>24.990000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.440176</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>50725</td>\n",
       "      <td>2503</td>\n",
       "      <td>1</td>\n",
       "      <td>13237</td>\n",
       "      <td>JODY CAL</td>\n",
       "      <td>211</td>\n",
       "      <td>20.000</td>\n",
       "      <td>23.779412</td>\n",
       "      <td>3007</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.00</td>\n",
       "      <td>32.830002</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.841064</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50729</td>\n",
       "      <td>7106</td>\n",
       "      <td>1</td>\n",
       "      <td>5010255</td>\n",
       "      <td>ENZO ANG</td>\n",
       "      <td>214</td>\n",
       "      <td>27.625</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>202</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.00</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.841667</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>50729</td>\n",
       "      <td>7106</td>\n",
       "      <td>1</td>\n",
       "      <td>5010255</td>\n",
       "      <td>ENZO ANG</td>\n",
       "      <td>214</td>\n",
       "      <td>27.625</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>302</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.00</td>\n",
       "      <td>27.375000</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.841667</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     SKU  DEPT  PACKSIZE   VENDOR     BRAND CLASSID    COST     RETAIL  STORE   \n",
       "0  50703  6404         1  6436489  LEVI STR     502  13.250  14.333333   8204  \\\n",
       "1  50716  5404         1  4014658  NANNETTE     00D  11.000  24.990000   1709   \n",
       "2  50725  2503         1    13237  JODY CAL     211  20.000  23.779412   3007   \n",
       "3  50729  7106         1  5010255  ENZO ANG     214  27.625  15.000000    202   \n",
       "4  50729  7106         1  5010255  ENZO ANG     214  27.625  15.000000    302   \n",
       "\n",
       "   avg_quan  avg_orig  avg_sprice  purchase_count  return_count   \n",
       "0       1.0     16.75    9.214000               4             1  \\\n",
       "1       1.0     24.99   24.990000               2             0   \n",
       "2       1.0     49.00   32.830002               2             0   \n",
       "3       1.0     60.00   15.000000               2             0   \n",
       "4       1.0     60.00   27.375000               4             0   \n",
       "\n",
       "   purchase_prob  PROF_MARG  DISCOUNTED  \n",
       "0            0.8   0.924419        True  \n",
       "1            1.0   0.440176       False  \n",
       "2            1.0   0.841064        True  \n",
       "3            1.0   1.841667        True  \n",
       "4            1.0   1.841667        True  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#define profit margin column\n",
    "df_sku_skst_trans['PROF_MARG']  = df_sku_skst_trans['COST'] / df_sku_skst_trans['RETAIL'] \n",
    "df_sku_skst_trans['DISCOUNTED']  = df_sku_skst_trans['avg_sprice'] < df_sku_skst_trans['avg_orig']\n",
    "df_sku_skst_trans.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "a9df4581",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_itemcount = df_skstinfo.groupby('STORE')['SKU'].count().reset_index().rename(columns={\"SKU\": \"COUNT_ITEMS\"})\n",
    "df_store_enriched = df_itemcount.merge(df_strinfo_updated, on = 'STORE')\n",
    "df_store_enriched = df_store_enriched.drop(columns = ['CITY', 'STATE', 'ZIP', 'WomenRatio'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "47fbcdf7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['STORE', 'COUNT_ITEMS', 'MenRatio', 'White', 'Black', 'Native', 'Asian',\n",
       "       'Pacific', 'Income', 'Poverty', 'Professional', 'Service', 'Office',\n",
       "       'Construction', 'Production', 'Unemployment', 'SKU', 'DEPT', 'PACKSIZE',\n",
       "       'VENDOR', 'BRAND', 'CLASSID', 'COST', 'RETAIL', 'avg_quan', 'avg_orig',\n",
       "       'avg_sprice', 'purchase_count', 'return_count', 'purchase_prob',\n",
       "       'PROF_MARG', 'DISCOUNTED'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final = pd.merge(df_store_enriched, df_sku_skst_trans, on = 'STORE')\n",
    "df_final.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "12383b57",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_final = df_final.drop(columns = ['Pacific', 'Black', 'Native', 'Service', 'Office', 'Production'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d1df01b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_final.to_csv(os.path.join(os.path.dirname(CURR_DIR),'project_files','df_final_v1.csv'),index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "2d77ee0f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STORE</th>\n",
       "      <th>COUNT_ITEMS</th>\n",
       "      <th>MenRatio</th>\n",
       "      <th>White</th>\n",
       "      <th>Asian</th>\n",
       "      <th>Income</th>\n",
       "      <th>Poverty</th>\n",
       "      <th>Professional</th>\n",
       "      <th>Construction</th>\n",
       "      <th>Unemployment</th>\n",
       "      <th>...</th>\n",
       "      <th>COST</th>\n",
       "      <th>RETAIL</th>\n",
       "      <th>avg_quan</th>\n",
       "      <th>avg_orig</th>\n",
       "      <th>avg_sprice</th>\n",
       "      <th>purchase_count</th>\n",
       "      <th>return_count</th>\n",
       "      <th>purchase_prob</th>\n",
       "      <th>PROF_MARG</th>\n",
       "      <th>DISCOUNTED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>102</td>\n",
       "      <td>96312</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>7.765672</td>\n",
       "      <td>...</td>\n",
       "      <td>8.400000</td>\n",
       "      <td>13.018372</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17.50</td>\n",
       "      <td>17.500000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.645242</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>102</td>\n",
       "      <td>96312</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>7.765672</td>\n",
       "      <td>...</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>19.990000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>35.00</td>\n",
       "      <td>6.496000</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>0.800400</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>102</td>\n",
       "      <td>96312</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>7.765672</td>\n",
       "      <td>...</td>\n",
       "      <td>9.600000</td>\n",
       "      <td>5.230000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20.00</td>\n",
       "      <td>9.400000</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.835564</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>102</td>\n",
       "      <td>96312</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>7.765672</td>\n",
       "      <td>...</td>\n",
       "      <td>5.420000</td>\n",
       "      <td>5.974000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>25.00</td>\n",
       "      <td>7.186667</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>0.907265</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>102</td>\n",
       "      <td>96312</td>\n",
       "      <td>0.514077</td>\n",
       "      <td>68.120896</td>\n",
       "      <td>1.543284</td>\n",
       "      <td>47144.328358</td>\n",
       "      <td>17.150746</td>\n",
       "      <td>31.208955</td>\n",
       "      <td>12.074627</td>\n",
       "      <td>7.765672</td>\n",
       "      <td>...</td>\n",
       "      <td>13.493841</td>\n",
       "      <td>20.058913</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.99</td>\n",
       "      <td>7.578571</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.672710</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   STORE  COUNT_ITEMS  MenRatio      White     Asian        Income    Poverty   \n",
       "0    102        96312  0.514077  68.120896  1.543284  47144.328358  17.150746  \\\n",
       "1    102        96312  0.514077  68.120896  1.543284  47144.328358  17.150746   \n",
       "2    102        96312  0.514077  68.120896  1.543284  47144.328358  17.150746   \n",
       "3    102        96312  0.514077  68.120896  1.543284  47144.328358  17.150746   \n",
       "4    102        96312  0.514077  68.120896  1.543284  47144.328358  17.150746   \n",
       "\n",
       "   Professional  Construction  Unemployment  ...       COST     RETAIL   \n",
       "0     31.208955     12.074627      7.765672  ...   8.400000  13.018372  \\\n",
       "1     31.208955     12.074627      7.765672  ...  16.000000  19.990000   \n",
       "2     31.208955     12.074627      7.765672  ...   9.600000   5.230000   \n",
       "3     31.208955     12.074627      7.765672  ...   5.420000   5.974000   \n",
       "4     31.208955     12.074627      7.765672  ...  13.493841  20.058913   \n",
       "\n",
       "   avg_quan  avg_orig avg_sprice purchase_count  return_count  purchase_prob   \n",
       "0       1.0     17.50  17.500000              2             0       1.000000  \\\n",
       "1       1.0     35.00   6.496000              4             1       0.800000   \n",
       "2       1.0     20.00   9.400000              5             0       1.000000   \n",
       "3       1.0     25.00   7.186667              5             1       0.833333   \n",
       "4       1.0     24.99   7.578571             14             0       1.000000   \n",
       "\n",
       "   PROF_MARG  DISCOUNTED  \n",
       "0   0.645242       False  \n",
       "1   0.800400        True  \n",
       "2   1.835564        True  \n",
       "3   0.907265        True  \n",
       "4   0.672710        True  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "6d174026",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['STORE', 'COUNT_ITEMS', 'MenRatio', 'White', 'Asian', 'Income',\n",
       "       'Poverty', 'Professional', 'Construction', 'Unemployment', 'SKU',\n",
       "       'DEPT', 'PACKSIZE', 'VENDOR', 'BRAND', 'CLASSID', 'COST', 'RETAIL',\n",
       "       'avg_quan', 'avg_orig', 'avg_sprice', 'purchase_count', 'return_count',\n",
       "       'purchase_prob', 'PROF_MARG', 'DISCOUNTED'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "addb11a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2105, 8306, 2102, 2107, 3103, 8305, 5102, 9306, 4505, 6505, 6601,\n",
       "       7307, 1202, 6006, 9105, 5203, 7102, 7101, 6402, 7106, 8101, 5404,\n",
       "       1905, 1301, 6404, 2301, 8104, 5301, 5100, 5305, 3404, 4801, 3701,\n",
       "       1107,  800, 3102, 4303, 4402,  801, 9801, 2200, 2503, 4704, 9000,\n",
       "       7104, 3100, 6400, 6107, 5207, 1704, 7205, 3105, 1100, 3107, 4400,\n",
       "       4407, 8000, 5506, 7200, 8002])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final.DEPT.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "901002d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3622251,   10904, 9520439, ..., 8313319, 9810091, 4510090])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final.VENDOR.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b494fa8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
